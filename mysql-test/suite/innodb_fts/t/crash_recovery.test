# Crash recovery tests for FULLTEXT INDEX.
# Note: These tests used to be part of a larger test, innodb_fts_misc_debug
# or innodb_fts.misc_debug. The part of the test that actually needs debug
# instrumentation been moved to innodb_fts.misc_debug.

--source include/have_innodb.inc
# The embedded server tests do not support restarting.
--source include/not_embedded.inc
--source include/maybe_debug.inc
if ($have_debug) { source include/have_debug_sync.inc; }

FLUSH TABLES;
# Following are test for crash recovery on FTS index, the first scenario
# is for bug Bug #14586855 INNODB: FAILING ASSERTION: (DICT_INDEX_GET_N_UNIQUE(
# PLAN->INDEX) <= PLAN->N_EXAC

# Scenario 1: Hidden FTS_DOC_ID column, and FTS index dropped
# Create FTS table
CREATE TABLE articles (
        id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY,
        title VARCHAR(200),
        body TEXT,
        FULLTEXT (title,body)
        ) ENGINE=InnoDB;

# Drop the FTS index before more insertion. The FTS_DOC_ID should
# be kept
DROP INDEX title ON articles;

# Insert six rows
INSERT INTO articles (title,body) VALUES
        ('MySQL Tutorial','DBMS stands for DataBase ...')  ,
        ('How To Use MySQL Well','After you went through a ...'),
        ('Optimizing MySQL','In this tutorial we will show ...'),
        ('1001 MySQL Tricks','1. Never run mysqld as root. 2. ...'),
        ('MySQL vs. YourSQL','In the following database comparison ...'),
        ('MySQL Security','When configured properly, MySQL ...');

BEGIN;
INSERT INTO articles (title,body) VALUES
        ('MySQL Tutorial','DBMS stands for DataBase ...');

--echo # Make durable the AUTO_INCREMENT in the above incomplete transaction.
--connect(ddl1, localhost, root,,)
CREATE TABLE t1(a TEXT,b TEXT,FULLTEXT INDEX(a)) ENGINE=InnoDB;
if ($have_debug)
{
--disable_query_log
SET DEBUG_SYNC='innodb_inplace_alter_table_enter SIGNAL 1 WAIT_FOR ever';
--enable_query_log
}
send ALTER TABLE t1 ADD FULLTEXT INDEX(b);
--connection default
if ($have_debug)
{
--disable_query_log
SET DEBUG_SYNC='now WAIT_FOR 1';
--enable_query_log
}

--connect(ddl2, localhost, root,,)
CREATE TABLE t2(a TEXT,b TEXT,FULLTEXT INDEX(a)) ENGINE=InnoDB;
if ($have_debug)
{
--disable_query_log
SET DEBUG_SYNC='innodb_inplace_alter_table_enter SIGNAL 2 WAIT_FOR ever';
--enable_query_log
}
send ALTER TABLE t2 DROP INDEX a, ADD FULLTEXT INDEX(b), FORCE;
--connection default
if ($have_debug)
{
--disable_query_log
SET DEBUG_SYNC='now WAIT_FOR 2';
--enable_query_log
}

--connect(ddl3, localhost, root,,)
CREATE TABLE t3(a TEXT,b TEXT,FULLTEXT INDEX(a)) ENGINE=InnoDB;
if ($have_debug)
{
--disable_query_log
SET DEBUG_SYNC='alter_table_before_rename_result_table SIGNAL 3 WAIT_FOR ever';
--enable_query_log
}
send ALTER TABLE t3 DROP INDEX a, ADD FULLTEXT INDEX(b), ALGORITHM=COPY;

--connection default
if ($have_debug)
{
--disable_query_log
SET DEBUG_SYNC='now WAIT_FOR 3';
--enable_query_log
}

if (!$have_debug)
{
# Work around the lack of MDEV-24626
let $restart_parameters=--innodb-force-recovery=1;
}
if ($have_debug)
{
let $restart_parameters=--innodb-force-recovery=0;
}
let $restart_noprint=1;
let $shutdown_timeout=0;
--source include/restart_mysqld.inc

disconnect ddl1;
disconnect ddl2;
disconnect ddl3;

CHECK TABLE t1,t2,t3;
DROP TABLE t1,t2,t3;

# This insert will re-initialize the Doc ID counter, it should not crash
INSERT INTO articles (title,body) VALUES
        ('MySQL Tutorial','DBMS stands for DataBase ...');

# Recreate fulltext index to see if everything is OK
CREATE FULLTEXT INDEX idx ON articles (title,body);

# Should return 3 rows
SELECT * FROM articles
        WHERE MATCH (title,body)
        AGAINST ('Database' IN NATURAL LANGUAGE MODE);

# Scenario 2: Hidden FTS_DOC_ID column, with FTS index
# Now let's do more insertion and test a crash with FTS on
INSERT INTO articles (title,body) VALUES
        ('MySQL Tutorial','DBMS stands for DataBase ...')  ,
        ('How To Use MySQL Well','After you went through a ...'),
        ('Optimizing MySQL','In this tutorial we will show ...'),
        ('1001 MySQL Tricks','1. Never run mysqld as root. 2. ...'),
        ('MySQL vs. YourSQL','In the following database comparison ...'),
        ('MySQL Security','When configured properly, MySQL ...');

connect(dml, localhost, root,,);
BEGIN;

INSERT INTO articles (title,body) VALUES
        ('MySQL Tutorial','DBMS stands for DataBase ...');
connection default;

--echo # Make durable the AUTO_INCREMENT in the above incomplete transaction.
--connect (flush_redo_log,localhost,root,,)
SET GLOBAL innodb_flush_log_at_trx_commit=1;
BEGIN;
DELETE FROM articles LIMIT 1;
ROLLBACK;
--disconnect flush_redo_log
--connection default

--source include/restart_mysqld.inc

disconnect dml;

# This insert will re-initialize the Doc ID counter, it should not crash
INSERT INTO articles (title,body) VALUES
        ('MySQL Tutorial','DBMS stands for DataBase ...');

# Should return 6 rows
SELECT * FROM articles
        WHERE MATCH (title,body)
        AGAINST ('Database' IN NATURAL LANGUAGE MODE);

DROP TABLE articles;

# Scenario 3: explicit FTS_DOC_ID column with FTS index 
# Now let's test user defined FTS_DOC_ID

CREATE TABLE articles (
	id int PRIMARY KEY,
        FTS_DOC_ID BIGINT UNSIGNED NOT NULL,
        title VARCHAR(200),
        body TEXT
        ) ENGINE=InnoDB;

CREATE FULLTEXT INDEX idx1 on articles (title, body);

# Note the FTS_DOC_ID is not fully ordered with primary index
INSERT INTO articles VALUES
        (1, 10, 'MySQL Tutorial','DBMS stands for DataBase ...')  ,
        (2, 1, 'How To Use MySQL Well','After you went through a ...'),
        (3, 2, 'Optimizing MySQL','In this tutorial we will show ...'),
        (4, 11, '1001 MySQL Tricks','1. Never run mysqld as root. 2. ...'),
        (5, 6, 'MySQL vs. YourSQL','In the following database comparison ...'),
        (7, 4, 'MySQL Security','When configured properly, MySQL ...');

connect(dml, localhost, root,,);
BEGIN;

# Below we do not depend on the durability of the AUTO_INCREMENT sequence,
# so we can skip the above flush_redo_log trick.
INSERT INTO articles VALUES
        (100, 200, 'MySQL Tutorial','DBMS stands for DataBase ...');

connect(dml2, localhost, root,,);

--echo #
--echo # MDEV-19073 FTS row mismatch after crash recovery
--echo #

CREATE TABLE mdev19073(id SERIAL, title VARCHAR(200), body TEXT,
                       FULLTEXT(title,body)) ENGINE=InnoDB;
INSERT INTO mdev19073 (title, body) VALUES
	('MySQL Tutorial', 'DBMS stands for Database...');
CREATE FULLTEXT INDEX idx ON mdev19073(title, body);
CREATE TABLE mdev19073_2 LIKE mdev19073;
if ($have_debug)
{
--disable_query_log
SET @saved_dbug = @@debug_dbug;
SET DEBUG_DBUG = '+d,fts_instrument_sync_debug';
--enable_query_log
}
INSERT INTO mdev19073_2 (title, body) VALUES
	('MySQL Tutorial', 'DBMS stands for Database...');
if ($have_debug)
{
--disable_query_log
SET DEBUG_DBUG = @saved_dbug;
--enable_query_log
}

INSERT INTO mdev19073 (title, body) VALUES
	('MariaDB Tutorial', 'DB means Database ...');
INSERT INTO mdev19073_2 (title, body) VALUES
	('MariaDB Tutorial', 'DB means Database ...');

# Should return 2 rows
SELECT * FROM mdev19073 WHERE MATCH (title, body)
AGAINST ('Database' IN NATURAL LANGUAGE MODE);
SELECT * FROM mdev19073_2 WHERE MATCH (title, body)
AGAINST ('Database' IN NATURAL LANGUAGE MODE);

connection default;
--source include/restart_mysqld.inc
disconnect dml;
disconnect dml2;

# This would re-initialize the FTS index and do the re-tokenization
# of above records
INSERT INTO articles VALUES         (8, 12, 'MySQL Tutorial','DBMS stands for DataBase ...');

SELECT * FROM articles WHERE MATCH (title, body)
        AGAINST ('Tutorial' IN NATURAL LANGUAGE MODE);

DROP TABLE articles;

# Should return 2 rows
SELECT * FROM mdev19073 WHERE MATCH (title, body)
AGAINST ('Database' IN NATURAL LANGUAGE MODE);
SELECT * FROM mdev19073_2 WHERE MATCH (title, body)
AGAINST ('Database' IN NATURAL LANGUAGE MODE);
DROP TABLE mdev19073, mdev19073_2;

if (!$have_debug)
{
--disable_query_log
# Work around the lack of MDEV-24626.
let $datadir=`select @@datadir`;
--remove_files_wildcard $datadir/test #sql-alter-*.ibd
--remove_files_wildcard $datadir/test #sql-backup-*.ibd
call mtr.add_suppression("InnoDB: Cannot (read first page of|open datafile for read-only:) '\\./test/(FTS_|#sql-(alter|backup)-).*\\.ibd'");
call mtr.add_suppression("InnoDB: Datafile '\\./test/(FTS_|#sql-(alter|backup)-).*\\.ibd' is corrupted");
call mtr.add_suppression("InnoDB: (The error means|Operating system error)");
call mtr.add_suppression("InnoDB: If you are installing InnoDB");
call mtr.add_suppression("InnoDB: Ignoring tablespace for `test`\\.`(FTS_|#sql-(backup|alter)-).*` because it could not be opened\\.");
call mtr.add_suppression("InnoDB: Tablespace [1-9][0-9]* was not found at ./test/(FTS_|#sql-(alter|backup)-).*\\.ibd, and innodb_force_recovery was set");
call mtr.add_suppression("InnoDB: Corrupted page \\[page id: space=[1-9][0-9]*, page number=0\\] of datafile './test/(FTS_|#sql-(alter|backup)-).*\\.ibd' could not be found in the doublewrite buffer\\.");
--enable_query_log
}

SELECT * FROM information_schema.innodb_sys_tables
WHERE name LIKE 'test/%' AND name NOT LIKE 'test/#sql-ib%';
